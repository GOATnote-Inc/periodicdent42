[build-system]
requires = ["setuptools>=68.0", "wheel", "ninja", "packaging"]
build-backend = "setuptools.build_meta"

[project]
name = "blackwell-sparsek"
version = "0.1.0"
description = "Production CUDA kernels for Blackwell sparse attention using CUTLASS 4.3.0"
readme = "README.md"
authors = [
    {name = "periodicdent42", email = "expert@cuda.dev"}
]
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
keywords = ["cuda", "attention", "transformer", "hopper", "blackwell", "cutlass", "inference"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Programming Language :: CUDA",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "torch>=2.0.0",
    "numpy>=1.24",
    "packaging>=23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
    "pytest-xdist>=3.0",
    "black>=24.0",
    "ruff>=0.1",
    "mypy>=1.0",
]

bench = [
    "pandas>=2.0",
    "matplotlib>=3.7",
    "seaborn>=0.12",
    "jupyter>=1.0",
]

xformers = [
    "xformers>=0.0.32",
]

vllm = [
    "vllm>=0.11.0",
]

all = [
    "blackwell-sparsek[dev,bench,xformers,vllm]",
]

[project.urls]
Homepage = "https://github.com/yourusername/periodicdent42"
Repository = "https://github.com/yourusername/periodicdent42/tree/main/BlackwellSparseK"
Documentation = "https://github.com/yourusername/periodicdent42/blob/main/BlackwellSparseK/README.md"
Issues = "https://github.com/yourusername/periodicdent42/issues"

[tool.setuptools]
packages = {find = {where = ["src"]}}
package-dir = {"" = "src"}

[tool.setuptools.package-data]
blackwell_sparsek = ["*.so", "*.pyd"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests",
]

