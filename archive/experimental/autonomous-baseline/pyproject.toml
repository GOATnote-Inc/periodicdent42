[project]
name = "autonomous-baseline"
version = "2.0.0"
description = "Autonomous-lab-grade baseline study for Tc prediction with calibrated uncertainty and active learning"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "GOATnote Autonomous Research Lab Initiative", email = "b@thegoatnote.com"}
]

dependencies = [
    # Core scientific stack (minimal for Phase 1)
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
    
    # Configuration and validation
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
models = [
    # PyTorch ecosystem (for MLP+MC-Dropout)
    "torch>=2.0.0",
    "lightning>=2.0.0",
    
    # Uncertainty quantification
    "ngboost>=0.5.1",
    "mapie>=0.8.0",
    
    # Additional for models
    "joblib>=1.3.0",  # For model serialization
]

materials = [
    # Materials informatics
    "matminer>=0.9.0",
    "pymatgen>=2023.5.0",
]

viz = [
    # Visualization and interpretation
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "shap>=0.42.0",
]

optimization = [
    # Optional optimization
    "scikit-optimize>=0.9.0",
    "optuna>=3.3.0",
]

dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
]

gp = [
    "gpytorch>=1.11.0",
]

dvc = [
    "dvc>=3.0.0",
    "dvc-gs>=2.22.0",
]

all = [
    "autonomous-baseline[dev,gp,dvc]",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "smoke: marks tests as smoke tests",
]

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

