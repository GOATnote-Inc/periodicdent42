name: Attribution Compliance

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  check-attribution:
    name: Check Attribution Compliance
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for ownership claims
        run: |
          echo "üîç Scanning for attribution violations..."
          
          # Allowlisted paths (compliance docs contain examples, evidence/scripts generate reports)
          ALLOW_PATHS="docs/applications/|notes/|journal/|README.*applications|recruiter_brief|COMPLIANCE_ATTRIBUTION|ATTRIBUTION_COMPLIANCE|compliance.yml|evidence/|scripts/"
          
          # Find violations (excluding allowlisted paths)
          violations=0
          
          # Check for copyright/ownership claims
          if git ls-files | grep -vE "$ALLOW_PATHS" | xargs grep -n -E '¬© Periodic Labs|Copyright.*Periodic Labs|Modifications by Periodic Labs' 2>/dev/null; then
            echo "‚ùå Found copyright/ownership claims"
            violations=1
          fi
          
          # Check for author/org fields
          if git ls-files | grep -vE "$ALLOW_PATHS" | xargs grep -n -E 'Organization:.*Periodic Labs|Author:.*Periodic Labs|Maintainer:.*Periodic Labs' 2>/dev/null; then
            echo "‚ùå Found author/organization fields"
            violations=1
          fi
          
          # Check for JSON/YAML fields
          if git ls-files '*.json' '*.yaml' '*.yml' | grep -vE "$ALLOW_PATHS" | xargs grep -n -E '"author":\s*"Periodic Labs"|"company":\s*"Periodic Labs"' 2>/dev/null; then
            echo "‚ùå Found author/company fields in JSON/YAML"
            violations=1
          fi
          
          # Check for generated footers
          if git ls-files | grep -vE "$ALLOW_PATHS" | xargs grep -n -E 'Generated by Periodic Labs|Periodic Labs Analytics System' 2>/dev/null; then
            echo "‚ùå Found generated report footers with ownership claims"
            violations=1
          fi
          
          if [[ $violations -ne 0 ]]; then
            echo ""
            echo "‚ùå Attribution compliance violations detected!"
            echo "   See COMPLIANCE_ATTRIBUTION.md for policy"
            echo ""
            echo "   Allowed: Context mentions in docs/applications/**, notes/**"
            echo "   Blocked: Ownership claims (¬©, Copyright, Author, etc.)"
            exit 1
          fi
          
          echo "‚úÖ Attribution compliance check passed"
      
      - name: Verify ownership banner
        run: |
          echo "üîç Checking for GOATnote ownership attribution..."
          
          # Verify main documents have correct attribution
          critical_files=(
            "LICENSE"
            "README.md"
            "COMPLIANCE_ATTRIBUTION.md"
          )
          
          for f in "${critical_files[@]}"; do
            if [[ -f "$f" ]]; then
              if ! grep -q "GOATnote" "$f"; then
                echo "‚ö†Ô∏è  $f missing GOATnote attribution"
              else
                echo "‚úÖ $f has correct attribution"
              fi
            fi
          done
      
      - name: Check git author config (info only)
        run: |
          echo "‚ÑπÔ∏è  Git author configuration:"
          echo "   user.name: $(git config user.name || echo 'not set')"
          echo "   user.email: $(git config user.email || echo 'not set')"
          echo ""
          echo "   Expected: Brandon Dent <b@thegoatnote.com>"
        continue-on-error: true

