╔═══════════════════════════════════════════════════════════════╗
║         CLAIMS VERIFICATION AUDIT - AUTONOMOUS BASELINE        ║
╚═══════════════════════════════════════════════════════════════╝

Date: Thu Oct  9 01:34:57 -03 2025
Commit: 1827c8c
Branch: main

════════════════════════════════════════════════════════════════
CATEGORY A: TEST COVERAGE & QUALITY
════════════════════════════════════════════════════════════════

--- A1: Coverage Percentage ---
src/active_learning/loop.py                 76     14    82%   92, 102-103, 121-123, 129, 149, 176-183, 196, 200-201
src/config.py                               96      0   100%
src/data/__init__.py                         0      0   100%
src/data/contracts.py                      121     17    86%   140, 159, 169, 175, 249-273
src/data/splits.py                          99      4    96%   218, 244-250
src/features/__init__.py                     0      0   100%
src/features/composition.py                138     45    67%   19, 170, 211-216, 229-243, 263-264, 298, 314-318, 332-371
src/features/scaling.py                    127     17    87%   57, 96, 123, 128-130, 142, 200, 213-218, 225, 238, 240
src/guards/__init__.py                       2      0   100%
src/guards/leakage_checks.py               130     15    88%   40-42, 70-72, 154-157, 223, 276, 283-285
src/guards/ood_detectors.py                145     37    74%   98-103, 111-113, 133, 153, 174, 273, 293, 378-389, 412-434, 450, 457-464
src/interpretability/__init__.py             0      0   100%
src/models/__init__.py                       5      0   100%
src/models/base.py                          62     12    81%   104, 109, 116, 121, 128, 132, 146, 159, 186, 190, 198-199
src/models/mlp_mc_dropout.py                83      6    93%   23-25, 243-250
src/models/ngboost_aleatoric.py            100     21    79%   22-28, 110-120, 143, 179-189, 210-211, 232-234, 280-287
src/models/rf_qrf.py                        74      3    96%   231-238
src/pipelines/__init__.py                    3      0   100%
src/pipelines/al_pipeline.py                98      2    98%   131, 238
src/pipelines/train_pipeline.py            144      8    94%   142, 203, 205, 207, 209, 254, 375, 405
src/reporting/__init__.py                    2      0   100%
src/reporting/evidence.py                   57     10    82%   42, 46, 50, 96-98, 129-143
src/uncertainty/__init__.py                  3      0   100%
src/uncertainty/calibration_metrics.py     105     14    87%   77, 80, 126, 168, 171, 240, 243, 246, 304, 307, 310, 363, 366, 401
src/uncertainty/conformal.py               109     26    76%   107, 124-131, 156-169, 184, 269, 300, 318-319, 342-351
----------------------------------------------------------------------
TOTAL                                     1997    289    86%
Coverage HTML written to dir htmlcov
Coverage JSON written to file coverage.json
====================== 231 passed, 110 warnings in 7.93s =======================

✅ VERIFIED Coverage: 85.5%

--- A2: Test Count ---
src/pipelines/train_pipeline.py            144    120    17%   71-87, 110-198, 202-209, 215-229, 241-254, 265-280, 294-318, 342-393, 397-414
src/reporting/__init__.py                    2      0   100%
src/reporting/evidence.py                   57     47    18%   30-64, 78-113, 129-143, 159-183
src/uncertainty/__init__.py                  3      0   100%
src/uncertainty/calibration_metrics.py     105     96     9%   40-49, 76-87, 118-138, 167-210, 239-271, 303-333, 362-379, 398-403
src/uncertainty/conformal.py               109     94    14%   48-53, 75-86, 106-133, 152-171, 183-190, 226-232, 254-282, 299-331, 340-351, 373-379, 399-404
----------------------------------------------------------------------
TOTAL                                     1997   1556    22%
Coverage HTML written to dir htmlcov
========================= 231 tests collected in 1.64s =========================

Config tests specifically:
src/uncertainty/conformal.py               109    109     0%   9-404
----------------------------------------------------------------------
TOTAL                                     1997   1910     4%
Coverage HTML written to dir htmlcov
========================= 49 tests collected in 0.39s ==========================

--- A3: Config Module Coverage ---
src/config.py                               96      0   100%

════════════════════════════════════════════════════════════════
CATEGORY B: FEATURE IMPLEMENTATION
════════════════════════════════════════════════════════════════

--- B1: Leakage Guards ---
Files:
-rw-r--r--@ 1 kiteboard  staff    331 Oct  9 00:28 src/guards/__init__.py
-rw-r--r--@ 1 kiteboard  staff  10482 Oct  8 23:52 src/guards/leakage_checks.py
-rw-r--r--@ 1 kiteboard  staff  16493 Oct  9 00:27 src/guards/ood_detectors.py
-rw-r--r--@ 1 kiteboard  staff  10038 Oct  9 00:53 src/data/splits.py

Implementation check:
from sklearn.metrics.pairwise import cosine_similarity
    def check_family_overlap(
        family_col: str = "_family",
        Check for chemical family overlap between splits.
        if family_col not in split1.columns or family_col not in split2.columns:

Tests:
ls: tests/test_*leakage*: No such file or directory
tests/test_guards.py
No guard tests found

--- B2: OOD Detection ---
Files:
-rw-r--r--@ 1 kiteboard  staff  16493 Oct  9 00:27 src/guards/ood_detectors.py

Tri-gate check:
- Mahalanobis Distance: Detects samples far from training distribution centroid
class MahalanobisOODDetector:
- KDE (Kernel Density Estimation): Estimates probability density of test samples
class KDEOODDetector:
- Conformal Novelty Detection: Uses nonconformity scores from conformal prediction
class ConformalNoveltyDetector:

--- B3: Active Learning ---
Files:
total 88
drwxr-xr-x@  7 kiteboard  staff    224 Oct  9 00:37 .
drwxr-xr-x@ 14 kiteboard  staff    448 Oct  8 23:45 ..
-rw-r--r--@  1 kiteboard  staff    949 Oct  9 00:36 __init__.py
drwxr-xr-x@  6 kiteboard  staff    192 Oct  9 00:37 __pycache__
-rw-r--r--@  1 kiteboard  staff   8933 Oct  9 00:34 acquisition.py
-rw-r--r--@  1 kiteboard  staff  13090 Oct  9 00:35 diversity.py
-rw-r--r--@  1 kiteboard  staff   9023 Oct  9 00:35 loop.py

Acquisition functions:
def expected_improvement(
def maximum_variance(y_std: np.ndarray) -> np.ndarray:

Diversity mechanisms:
    k_medoids_selection,
    greedy_diversity_selection,
    dpp_selection,

--- B4: Conformal Prediction ---
Files:
-rw-r--r--@ 1 kiteboard  staff  13195 Oct  9 00:19 src/uncertainty/conformal.py

Implementation:
class SplitConformalPredictor:
class MondrianConformalPredictor:

--- B5: GO/NO-GO Policy ---
Documentation:
-rw-r--r--@ 1 kiteboard  staff  13430 Oct  9 01:05 docs/GO_NO_GO_POLICY.md

Implementation:
    go_no_go_gate,
    "go_no_go_gate",
def go_no_go_gate(

════════════════════════════════════════════════════════════════
CATEGORY C: PHYSICS VALIDATION
════════════════════════════════════════════════════════════════

--- C1: Physics Documentation ---
✅ PHYSICS_JUSTIFICATION.md exists (     417 lines)
Sections:
## Purpose
## Table of Contents
## Composition Features
## Atomic Mass & Isotope Effect
## Electronegativity & Charge Transfer
## Valence Electrons & Band Structure
## Ionic Radius & Lattice Parameters
## Feature Importance Rankings
## Physics Sanity Checks
## Lightweight vs Matminer Featurizers

--- C2: Physics Tests ---
Physics test files:
ls: tests/test_*physics*: No such file or directory
ls: tests/test_*sanity*: No such file or directory
No explicit physics test files

Physics constraints in tests:
References found: 16

════════════════════════════════════════════════════════════════
CATEGORY D: ARTIFACTS & REPRODUCIBILITY
════════════════════════════════════════════════════════════════

--- D1: Evidence Packs ---
Directories:
total 0
drwxr-xr-x@  4 kiteboard  staff  128 Oct  8 23:30 .
drwxr-xr-x@ 27 kiteboard  staff  864 Oct  9 01:35 ..
drwxr-xr-x@  2 kiteboard  staff   64 Oct  8 23:30 latest
drwxr-xr-x@  2 kiteboard  staff   64 Oct  8 23:30 runs
ls: artifacts/: No such file or directory
No artifacts/ directory

Manifests:

--- D2: Reproducibility ---
Seed configurations:
configs/train_rf.yaml:seed: 42
configs/train_rf.yaml:  random_state: 42
configs/al_ucb.yaml:seed: 42
configs/al_ucb.yaml:  random_state: 42
src/config.py:    random_state: int = 42

Deterministic settings:
src/config.py:    deterministic: bool = True

════════════════════════════════════════════════════════════════
CATEGORY E: DOCUMENTATION ACCURACY
════════════════════════════════════════════════════════════════

--- E1: README Claims ---
Coverage claim:
[![Coverage](https://img.shields.io/badge/coverage-81%25-brightgreen.svg)](tests/)
> **Key Results:** Calibrated prediction intervals achieve **95%±1% coverage** with median width W K; OOD filter reduces high-risk picks by X%; diversity-aware AL (UCB+DPP) cuts RMSE by **34% in 20 acquisitions** (2.1 bits/query).

Test count claim:
[![Tests](https://img.shields.io/badge/tests-182%20passing-brightgreen.svg)](tests/)
**Test Suite**: 182/182 tests passing (100% pass rate)  

════════════════════════════════════════════════════════════════
VERIFICATION COMPLETE
════════════════════════════════════════════════════════════════
