name: Epistemic CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUNNER_USD_PER_HOUR: "0.60"

jobs:
  nix-check:
    name: Nix Flake Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      
      - name: Flake check
        run: nix flake check

  hermetic-repro:
    name: Hermetic Reproducibility
    needs: nix-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      
      - name: First build
        run: |
          set -euo pipefail
          nix build .#default --print-build-logs | tee first_build.log
          nix hash path ./result > first.hash
      
      - name: Second build (identical expected)
        run: |
          set -euo pipefail
          rm -rf result  # Remove symlink to force rebuild
          nix build .#default --print-build-logs | tee second_build.log
          nix hash path ./result > second.hash
      
      - name: Compare hashes
        run: |
          set -euo pipefail
          echo "First build hash:"
          cat first.hash
          echo "Second build hash:"
          cat second.hash
          diff -s first.hash second.hash
      
      - name: Prepare artifacts
        run: |
          mkdir -p artifact
          cat first.hash > artifact/sha256.txt
          printf "\n" >> artifact/sha256.txt
          cat second.hash >> artifact/sha256.txt
          cat first_build.log second_build.log > artifact/build.log
      
      - name: Upload reproducibility artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reproducibility
          path: artifact/

  epistemic-ci:
    name: Epistemic Test Selection
    needs: hermetic-repro
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas scikit-learn joblib
      
      - name: Generate mock CI data
        run: |
          mkdir -p data artifact
          python3 scripts/collect_ci_runs.py --mock 100 --inject-failures 0.12
      
      - name: Train failure predictor
        run: |
          python3 scripts/train_selector.py
        continue-on-error: true
      
      - name: Score EIG
        run: |
          python3 scripts/score_eig.py
      
      - name: Select tests
        run: |
          python3 scripts/select_tests.py
      
      - name: Generate report
        run: |
          python3 scripts/gen_ci_report.py
      
      - name: Generate reproducibility appendix
        run: |
          COMMIT="${{ github.sha }}"
          DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          cat > artifact/REPRODUCIBILITY.md <<EOF
          # Reproducibility Appendix
          
          ## Build Metadata
          
          - **Commit:** \`$COMMIT\`
          - **Date:** $DATE
          - **Branch:** \`${{ github.ref_name }}\`
          - **Workflow:** ${{ github.workflow }}
          - **Run:** ${{ github.run_id }}
          
          ## Hermetic Build Verification
          
          Nix double-build with identical hash verified in \`hermetic-repro\` job.
          See \`artifact/sha256.txt\` for hash comparison.
          
          ## Epistemic CI Artifacts
          
          - \`ci_metrics.json\` - Information-theoretic and practical metrics
          - \`ci_report.md\` - Human-readable summary
          - \`eig_rankings.json\` - Per-test EIG scores
          - \`selected_tests.json\` - Selected test list
          
          ## Reproducibility Instructions
          
          \`\`\`bash
          # Clone and checkout
          git clone https://github.com/${{ github.repository }}.git
          cd \$(basename ${{ github.repository }})
          git checkout $COMMIT
          
          # Verify hermetic build
          nix build .#default
          nix hash path ./result
          
          # Reproduce epistemic CI
          python3 scripts/collect_ci_runs.py --mock 100 --inject-failures 0.12
          python3 scripts/train_selector.py
          python3 scripts/score_eig.py
          python3 scripts/select_tests.py
          python3 scripts/gen_ci_report.py
          \`\`\`
          
          ## Lockfiles
          
          - \`flake.lock\` - Nix dependency pins (committed)
          - \`uv.lock\` / \`requirements*.lock\` - Python dependency pins
          EOF
      
      - name: Display report
        run: |
          echo "=========================================="
          echo "Epistemic CI Report"
          echo "=========================================="
          cat artifact/ci_report.md
          echo ""
          echo "=========================================="
          echo "Metrics"
          echo "=========================================="
          cat artifact/ci_metrics.json
      
      - name: Upload epistemic-ci artifacts
        uses: actions/upload-artifact@v4
        with:
          name: epistemic-ci-artifacts
          path: artifact/