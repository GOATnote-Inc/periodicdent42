#!/usr/bin/env python
from __future__ import annotations

import argparse
import json
import os
from pathlib import Path

import requests
from yaml import safe_load


API = os.environ.get("SYNTH_API", "http://localhost:8080")
USER = os.environ.get("BASIC_AUTH_USER", "admin")
PASS = os.environ.get("BASIC_AUTH_PASS", "changeme")

def auth():
    return (USER, PASS)


def submit(plan_path: str):
    with open(plan_path, "r", encoding="utf-8") as fh:
        plan = safe_load(fh)
    payload = {"plan": plan}
    res = requests.post(f"{API}/synthesis/plans", json=payload, auth=auth())
    res.raise_for_status()
    print(json.dumps(res.json(), indent=2))


def start(run_id: str):
    res = requests.post(f"{API}/synthesis/runs/{run_id}/start", auth=auth())
    res.raise_for_status()
    print(res.json())


def abort(run_id: str):
    res = requests.post(f"{API}/synthesis/runs/{run_id}/abort", auth=auth())
    res.raise_for_status()
    print(res.json())


def bundle(run_id: str, dest: str | None):
    res = requests.get(f"{API}/bundles/{run_id}", auth=auth())
    res.raise_for_status()
    dest_path = Path(dest or f"{run_id}_bundle.zip")
    dest_path.write_bytes(res.content)
    print(f"Saved {dest_path}")


def main():
    parser = argparse.ArgumentParser(description="Synthesis CLI")
    sub = parser.add_subparsers(dest="cmd", required=True)

    p_submit = sub.add_parser("submit")
    p_submit.add_argument("plan")

    p_start = sub.add_parser("start")
    p_start.add_argument("run_id")

    p_abort = sub.add_parser("abort")
    p_abort.add_argument("run_id")

    p_bundle = sub.add_parser("bundle")
    p_bundle.add_argument("run_id")
    p_bundle.add_argument("--dest")

    args = parser.parse_args()
    if args.cmd == "submit":
        submit(args.plan)
    elif args.cmd == "start":
        start(args.run_id)
    elif args.cmd == "abort":
        abort(args.run_id)
    elif args.cmd == "bundle":
        bundle(args.run_id, args.dest)


if __name__ == "__main__":
    main()

