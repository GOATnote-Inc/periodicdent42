name: Preflight Environment Guard

on:
  push:
    branches: [main, dev, feat/*]
  pull_request:
    branches: [main, dev]

jobs:
  preflight:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker + NVIDIA runtime
        run: |
          curl -fsSL https://get.docker.com | sh
          sudo systemctl enable --now docker
          
          distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
          curl -s -L https://nvidia.github.io/libnvidia-container/gpgkey | sudo apt-key add -
          curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \
            sudo tee /etc/apt/sources.list.d/libnvidia-container.list
          
          sudo apt-get update && sudo apt-get install -y nvidia-container-toolkit
          sudo systemctl restart docker

      - name: Build container
        run: |
          docker build -t cuda13.0-cutlass4.3 -f docker/blackwell-sparsek-dev.dockerfile .

      - name: Validate CUDA + CUTLASS versions
        run: |
          docker run --rm cuda13.0-cutlass4.3 bash -c \
            'echo "CUDA:" && nvcc --version | grep "V13.0" && \
             echo "CUTLASS:" && cd /opt/cutlass && git describe --tags 2>/dev/null || git rev-parse --short HEAD | grep -E "v4\.(3|1)\.0"'

      - name: Verify Python dependencies
        run: |
          docker run --rm cuda13.0-cutlass4.3 bash -c \
            'python3 -c "import torch; print(\"PyTorch:\", torch.__version__)" && \
             pip list | grep -E "(xformers|vllm|flash-attn|cutlass)"'

      - name: Compile sample CUDA kernel
        run: |
          docker run --rm -v $PWD:/workspace cuda13.0-cutlass4.3 \
            bash -c "cd /workspace && \
            echo '__global__ void test_kernel() { }' > test_kernel.cu && \
            nvcc -O3 \
            -gencode arch=compute_90,code=sm_90a \
            -gencode arch=compute_100,code=sm_100 \
            -I/opt/cutlass/include \
            -o test_kernel test_kernel.cu && \
            rm test_kernel.cu"

      - name: Run unit tests (CPU fallback)
        run: |
          docker run --rm -v $PWD:/workspace cuda13.0-cutlass4.3 \
            bash -c "cd /workspace && pip install -e . && pytest tests/ -v -k 'not gpu' || true"

      - name: Security scan (no credentials in repo)
        run: |
          ! grep -r -E "ssh|password|token|api_key" . --include="*.py" --include="*.md" --exclude-dir=".git" || \
          { echo "⚠️  Credentials detected in repo"; exit 1; }

      - name: Generate environment report
        run: |
          docker run --rm cuda13.0-cutlass4.3 bash -c \
            'echo "# Preflight Environment Report" && \
             echo "" && \
             echo "**CUDA:**" && nvcc --version | grep release && \
             echo "" && \
             echo "**CUTLASS:**" && cd /opt/cutlass && git describe --tags 2>/dev/null || git rev-parse --short HEAD && \
             echo "" && \
             echo "**PyTorch:**" && python3 -c "import torch; print(torch.__version__)" && \
             echo "" && \
             echo "**✅ Preflight passed**"' > preflight_report.md

      - name: Upload preflight report
        uses: actions/upload-artifact@v3
        with:
          name: preflight-report
          path: preflight_report.md

